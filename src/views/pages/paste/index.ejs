<div class="pastect">
  <div id="editor" class="editor"></div>
  <div class="overlay">
    <span class="ptitle">paste.mirage</span>
    <% if (!loggedIn) { %>
    <a href="/account/login?next=/paste">[ not logged in ]</a>
    <% } else { %>
    <a href="#" id="upload-btn">[ upload ]</a>
    <a href="#">[ settings ]</a>
    <a href="/">[ go home ]</a>
    <% } %>
  </div>
</div>
<script src="/lib/monaco_editor/vs/loader.js"></script>

<script>
  require.config({
    paths: {
      vs: '/lib/monaco_editor/vs'
    }
  })
  require(['vs/editor/editor.main'], () => {
    monaco.editor.defineTheme('prime', {
      base: 'vs-dark',
      inherit: true,
      rules: [
        {
          foreground: '4c4c70',
          token: 'comment'
        },
        {
          foreground: 'a2d66b',
          token: 'string'
        },
        {
          foreground: '88c448',
          token: 'constant.numeric'
        },
        {
          foreground: 'ee4266',
          token: 'constant.language'
        },
        {
          foreground: 'ee4266',
          token: 'constant.character'
        },
        {
          foreground: 'ee4266',
          token: 'constant.other'
        },
        {
          foreground: 'f3fcf0',
          token: 'keyword'
        },
        {
          foreground: 'ee4266',
          token: 'storage'
        },
        {
          foreground: '9d50ba',
          token: 'storage.type'
        },
        {
          foreground: 'ee4266',
          fontStyle: 'underline',
          token: 'entity.name.class'
        },
        {
          foreground: 'ee4266',
          fontStyle: 'italic underline',
          token: 'entity.other.inherited-class'
        },
        {
          foreground: 'ffd23f',
          token: 'entity.name.function'
        },
        {
          foreground: 'd5d5e8',
          fontStyle: 'italic',
          token: 'variable.parameter'
        },
        {
          foreground: '9d50ba',
          token: 'entity.name.tag'
        },
        {
          foreground: 'ee4266',
          token: 'entity.other.attribute-name'
        },
        {
          foreground: 'ee4266',
          token: 'support.function'
        },
        {
          foreground: 'ee4266',
          token: 'support.constant'
        },
        {
          foreground: 'ee4266',
          fontStyle: 'italic',
          token: 'support.type'
        },
        {
          foreground: 'ee4266',
          fontStyle: 'italic',
          token: 'support.class'
        },
        {
          foreground: 'cf433e',
          background: '664e4d',
          token: 'invalid'
        },
        {
          foreground: 'cf433e',
          background: '664e4d',
          token: 'invalid.deprecated'
        },
        {
          foreground: 'a2d66b',
          token: 'meta.structure.dictionary.json string.quoted.double.json'
        },
        {
          foreground: '75715e',
          token: 'meta.diff'
        },
        {
          foreground: '75715e',
          token: 'meta.diff.header'
        },
        {
          foreground: '00a8c6',
          token: 'markup.deleted'
        },
        {
          foreground: 'a6e22e',
          token: 'markup.inserted'
        },
        {
          foreground: 'e6db74',
          token: 'markup.changed'
        },
        {
          foreground: '8fbe00a0',
          token: 'constant.numeric.line-number.find-in-files - match'
        },
        {
          foreground: 'e6db74',
          token: 'entity.name.filename.find-in-files'
        },
        {
          foreground: '6d6d9c',
          token: 'keyword.other'
        },
        {
          foreground: 'a2d66b',
          token: 'meta.property-value'
        },
        {
          foreground: 'a2d66b',
          token: 'support.constant.property-value'
        },
        {
          foreground: 'a2d66b',
          token: 'constant.other.color'
        },
        {
          foreground: 'ee4266',
          token: 'meta.structure.dictionary.json string.quoted.double.json'
        },
        {
          foreground: 'a2d66b',
          token:
            'meta.structure.dictionary.value.json string.quoted.double.json'
        },
        {
          fontStyle: 'normal',
          token: 'meta.property-name support.type.property-name'
        },
        {
          foreground: '9090b2',
          token: 'meta.property-value punctuation.separator.key-value'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.use'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.function.use'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.namespace'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.new'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.special-method'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.unit'
        },
        {
          foreground: '9d50ba',
          token: 'keyword.other.use-as'
        },
        {
          foreground: '9090b2',
          fontStyle: 'normal',
          token: 'meta.use support.class.builtin'
        },
        {
          foreground: '9090b2',
          fontStyle: 'normal',
          token: 'meta.other.inherited-class support.class.builtin'
        },
        {
          foreground: 'd5d5e8',
          fontStyle: 'normal',
          token: 'variable.other'
        },
        {
          foreground: '88c448',
          fontStyle: 'italic',
          token: 'variable.parameter.function.coffee'
        },
        {
          foreground: 'ee4266',
          token: 'entity.name.section.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.heading.markdown'
        },
        {
          foreground: 'a2d66b',
          token: 'markup.raw.inline.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.bold.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.italic.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.string.begin.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.string.end.markdown'
        },
        {
          foreground: 'f3fcf0',
          token: 'punctuation.definition.metadata.markdown'
        },
        {
          foreground: '9d50ba',
          fontStyle: 'italic',
          token: 'markup.underline.link.markdown'
        },
        {
          foreground: '9d50ba',
          fontStyle: 'italic',
          token: 'markup.underline.link.image.markdown'
        },
        {
          foreground: '9d50ba',
          fontStyle: 'italic',
          token: 'meta.image.inline.markdown'
        },
        {
          foreground: '9d50ba',
          token: 'markup.bold.markdown'
        },
        {
          foreground: '9d50ba',
          token: 'markup.italic.markdown'
        },
        {
          fontStyle: 'italic',
          token: 'markup.italic.markdown'
        },
        {
          fontStyle: 'bold',
          token: 'markup.bold.markdown'
        },
        {
          foreground: '664e4d',
          token: 'markup.raw.block.markdown'
        },
        {
          foreground: 'e61f44',
          token: 'markup.deleted.git_gutter'
        },
        {
          foreground: 'a7da1e',
          token: 'markup.inserted.git_gutter'
        },
        {
          foreground: 'f7b83d',
          token: 'markup.changed.git_gutter'
        },
        {
          foreground: 'ffd23f',
          token: 'entity.other.attribute-name.class.css'
        }
      ],
      colors: {
        'editor.foreground': '#9090b2',
        'editor.background': '#202030',
        'editor.selectionBackground': '#ee4266',
        'editor.lineHighlightBackground': '#262639',
        'editorCursor.foreground': '#f8f8f0',
        'editorWhitespace.foreground': '#3f3f5e',
        'editorIndentGuide.activeBackground': '#34344f',
        'editor.selectionHighlightBorder': '#ffffff'
      }
    })
    let editor = monaco.editor.create(document.getElementById('editor'), {
      value: '',
      language: 'javascript',
      automaticLayout: true,
      theme: 'prime'
    })
    window.editor = editor
    const $uploadBtn = document.getElementById('upload-btn')

    $uploadBtn.onclick = async e => {
      e.preventDefault()
      console.log('submitting to server', editor.getValue())
      const resp = await fetch('/paste/upload', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          content: editor.getValue()
        })
      })
      const res = await resp.json()
      if (!res.success) {
        $uploadBtn.innerText = `[ upload failed, ${res.error} ]`
        setTimeout(() => {
          $uploadBtn.innerText = `[ upload ]`
        }, 5000)
        return
      }
      $uploadBtn.innerText = `[ upload success, redirecting ]`
      setTimeout(() => {
        window.location.href = res.url
      }, 1000)
    }
  })
</script>

<style>
  .editor {
    height: 100%;
    width: 100%;
  }
  .pastect {
    width: 100%;
    height: 100%;
  }
  .overlay {
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    right: 0;
    background: rgba(10, 10, 10, 0.5);
    padding: 10px;
  }
  .overlay {
    font-family: monospace;
  }
  .ptitle {
    color: #ffffff;
    font-size: 20px;
  }
</style>
